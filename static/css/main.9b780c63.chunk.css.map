{"version":3,"sources":["D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/Header.scss","D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/common.scss","D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/ArchitecturesList.scss","D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/ArchitectureLayerBox.scss","D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/Diagram.scss","D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/Questions.scss","D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/Workspace.scss","D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/D:/Architecture-Suggestor/azure-architecture-suggestor-portal/src/styles/App.scss"],"names":[],"mappings":"AAGA,QCwEI,WApEc,AAqEd,wBAtEqB,CDWxB,AAdD,oBCQI,UDH0B,ACI1B,YAFwC,AA0BpC,eD3BiC,ACyCjC,WDxC0B,CAM7B,AAbL,6CC+CQ,SDrC2B,ACuB3B,aDtBmC,CAClC,AEbT,0BDSI,UCRsB,ADStB,YAFwC,AAsCpC,gBC5CkC,CAczC,AAhBD,gCDgEI,kBAD2B,AAE3B,qCAFkD,AAElD,6BAFkD,AAElD,oBAFkD,AAGlD,gBC7DoD,AD8DpD,cC9DiC,AD+DjC,qBALsH,AAflH,SC1CuB,AACvB,cAAe,CAClB,AARL,iCDeI,gBCJ8C,ADK9C,eAFqF,AAGrF,aAHkE,AAIlE,gBAJqF,AAsBjF,aCxB2B,ADkC3B,cCjCgC,ADmDpC,kBAD2B,AAE3B,qCAFkD,AAElD,6BAFkD,AAElD,oBAFkD,AAGlD,gBAHwE,AAIxE,cCrDiC,ADsDjC,oBALsH,CChDrH,ACjBL,WACI,YAAY,AACZ,cAAc,AAGd,uBAAuB,AACvB,mBAAmB,AACnB,iBAAkB,CA0BrB,AAjCD,iCAGI,aAAa,AACb,qBAAsB,CAmBrB,AAvBL,sBAYQ,yBAAyB,AACzB,eAAe,AACf,kBAAkB,AAClB,6BAA6B,AAC7B,aAAa,AACb,iBAAiB,AACjB,UAAW,CAKd,AAvBL,4BAqBY,YAAa,CAChB,AAtBT,uBA0BQ,cAAe,CAClB,AA3BL,kBA8BQ,kBAAkB,AAClB,UAAW,CACd,AAGL,MACI,iBAAkB,CACrB,ACrCD,mBACI,kBAAkB,AAClB,sBAAsB,AACtB,mBAAmB,AACnB,aAAa,AACb,iBAAkB,CASrB,AAdD,oCAQQ,aAAa,AACb,6BAA6B,AAC7B,qBAAqB,AACrB,YAAY,AACZ,UAAY,CACf,ACbL,qBACI,oBAAoB,AACpB,sBAAsB,AACtB,mBAAmB,AACnB,aAAa,AACb,eAAgB,CAqBnB,AA1BD,+BAQQ,aAAc,CAYjB,AApBL,+CAUY,eAAgB,CACnB,AAXT,uCAcY,qBAAsB,CAKzB,AAnBT,gDAiBgB,cAAe,CAClB,AAlBb,8BAuBQ,WAAY,AACZ,mBAAoB,CACvB,ACrBL,yBACI,WL4EA,aAAa,AACb,8BK5EiE,AL6EjE,wBAH+E,AAI/E,wCK9E4G,AL+E5G,qBK/EoI,ALgFpI,eANkJ,AArElJ,UKJ0B,ALK1B,WKL+B,ALyC3B,qBKxCsC,CACzC,CAAA,AAGL,yBACI,WLoEA,aAAa,AACb,2BAFoD,AAGpD,2BKrE8D,ALsE9D,4DKtE6H,ALuE7H,kBALgI,AAMhI,kBKxEkJ,ALHlJ,UKI0B,ALH1B,WKG+B,ALiC3B,qBKhCsC,CACzC,CAAA,ACfL,UNSI,WMRuB,ANSvB,YAFwC,AAwCpC,SM9CkB,AN8DtB,kBAD2B,AAE3B,qCAFkD,AAElD,6BAFkD,AAElD,oBAFkD,AAGlD,gBAHwE,AAIxE,iBAJ4F,AAK5F,qBMjEsC,ANsEtC,cAD4C,AAE5C,yBAvEsB,AAMtB,WADyB,AAEzB,WML+B,CAKlC,AAVD,sBNSI,WADyB,AAEzB,WMFmC,CAClC","file":"main.9b780c63.chunk.css","sourcesContent":["@import './common.scss';\r\n\r\n// CSS for all screen sizes\r\n#header {\r\n\r\n    @include color($color-dark-grey, $color-white);\r\n    \r\n    .custom-row {\r\n        @include dimension(80%);\r\n        @include padding(40px, 0, 40px, 0);\r\n        @include margin($all: auto);\r\n        \r\n        p, h2 {\r\n            @include margin($all: 0);\r\n            @include padding(5px, 0, 5px, 0);\r\n        }\r\n    }\r\n}","// Variables for media queries\r\n$media-desktop-width: 992px;\r\n$media-tablet-width: 768px;\r\n\r\n// Color codes\r\n$color-light-grey: #f4f4f4;\r\n$color-dark-grey: #3e3d4d;\r\n$color-white: #fff;\r\n\r\n// Mixin for setting height and width \r\n@mixin dimension($width: auto, $height: auto) {\r\n    width: $width;\r\n    height: $height;\r\n}\r\n\r\n// Mixin for setting min/max width/height\r\n@mixin minmaxDimension($min-width: 0, $max-width: none, $min-height: 0, $max-height: none) {\r\n    min-width: $min-width;\r\n    max-width: $max-height;\r\n    min-height: $min-height;\r\n    max-height: $max-height;\r\n}\r\n// Mixin for setting flex properties\r\n@mixin flexbox($direction: row, $justify-content: flex-start, $align-items: stretch) {\r\n    display: flex;\r\n    flex-direction: $direction;\r\n    justify-content: $justifyContent;\r\n    align-items: $alignItems\r\n}\r\n\r\n// Mixin for setting element padding\r\n@mixin padding($top: 0, $right: 0, $bottom: 0, $left: 0, $all: none) {\r\n    @if $all == none {\r\n        padding-top: $top;\r\n        padding-right: $right;\r\n        padding-bottom: $bottom;\r\n        padding-left: $left;\r\n    } @else {\r\n        padding: $all;\r\n    }\r\n}\r\n\r\n// Mixin for setting element margin\r\n@mixin margin($top: 0, $right: 0, $bottom: 0, $left: 0, $all: none) {\r\n    @if $all == none {\r\n        margin-top: $top;\r\n        margin-right: $right;\r\n        margin-bottom: $bottom;\r\n        margin-left: $left;\r\n    } @else {\r\n        margin: $all;\r\n    }\r\n}\r\n\r\n// Mixin for element position\r\n@mixin position($type: relative, $top:auto, $right:auto, $bottom: auto, $left:auto, $zindex: auto) {\r\n    position: $type;\r\n    top: $top;\r\n    right: $right;\r\n    bottom: $bottom;\r\n    left: $left;\r\n    z-index: $zindex;\r\n}\r\n\r\n// Mixin for fonts\r\n@mixin font($font-style: normal, $font-variant: normal, $font-weight: normal, $font-size: medium, $font-family: 'Segoe UI') {\r\n    font-style: $font-style;\r\n    font-variant: $font-variant;\r\n    font-weight: $font-weight;\r\n    font-size: $font-size;\r\n    font-family: $font-family;\r\n}\r\n\r\n// Mixin for background color and font color\r\n@mixin color($bg-color: inherit, $color: inherit) {\r\n    color: $color;\r\n    background-color: $bg-color;\r\n}\r\n\r\n//Mixin for css grids\r\n@mixin parentPropsInCssGrid($grid-template-columns: none, $grid-template-rows: none, $grid-template-areas: none, $grid-column-gap: 0, $grid-row-gap: 0) {\r\n    display: grid;\r\n    grid-template-columns: $grid-template-columns;\r\n    grid-template-rows: $grid-template-rows;\r\n    grid-template-areas: $grid-template-areas;\r\n    grid-column-gap: $grid-column-gap;\r\n    grid-row-gap: $grid-row-gap;\r\n}","@import 'common';\r\n\r\n#architectures-select-box {\r\n    @include dimension(80%);\r\n    @include margin(15px, auto, 15px, auto);\r\n\r\n    label {\r\n        @include font($font-size: 1em, $font-weight: 700);\r\n        @include margin($all: 0);\r\n        cursor: pointer;\r\n    }\r\n\r\n    select {\r\n        @include minmaxDimension($min-width: 200px);\r\n        @include padding($all: 10px);\r\n        @include margin(10px, 0, 10px, 0);\r\n        @include font($font-size: 1em);\r\n    }\r\n}",".outer-box {\r\n    width: 100px;\r\n    margin: 0 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: relative;\r\n\r\n    .inner-box {\r\n        display: flex;\r\n        flex-direction: column;\r\n        background-color: #F7F7F7;\r\n        font-size: 12px;\r\n        text-align: center;\r\n        justify-content: space-around;\r\n        padding: 10px;\r\n        min-height: 100px;\r\n        width: 100%;\r\n\r\n        .hide {\r\n            display: none;\r\n        } \r\n    }\r\n\r\n    .layer-name {\r\n        font-size: 14px;\r\n    }\r\n\r\n    .arrow {\r\n        position: absolute;\r\n        right: -50%;\r\n    }\r\n}\r\n\r\n.hide {\r\n    visibility: hidden;\r\n}   ","#diagram-container {\r\n    grid-area: diagram;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    position: relative;\r\n\r\n    #diagram-wrapper {\r\n        display: flex;\r\n        justify-content: space-around;\r\n        align-content: center;\r\n        height: 100%;\r\n        color: black;\r\n    }\r\n}","#questions-container {\r\n    grid-area: questions;\r\n    background-color: #fff;\r\n    border-radius: 10px;\r\n    padding: 10px;\r\n    overflow-y: auto;\r\n\r\n    .question {\r\n        margin: 20px 0;\r\n        .question-title {\r\n            margin-left: 5px;\r\n        }\r\n    \r\n        .option {\r\n            margin: 5px 0 5px 10px;\r\n\r\n            .pointer {\r\n                cursor: pointer;\r\n            }\r\n        }\r\n    }\r\n\r\n    .disable {\r\n        opacity: 0.3;\r\n        pointer-events: none;\r\n    }\r\n}","@import './Diagram.scss';\r\n@import './Questions.scss';\r\n@import './common.scss';\r\n\r\n@media(min-width: $media-desktop-width) {\r\n    #workspace {\r\n        @include parentPropsInCssGrid($grid-template-columns: 35% 65%, $grid-template-areas: \"questions diagram\", $grid-column-gap: 15px);\r\n        @include dimension(80%, 60%);\r\n        @include margin(auto, auto, 25px, auto);\r\n    }\r\n}\r\n\r\n@media(max-width: $media-desktop-width) {\r\n    #workspace {\r\n        @include parentPropsInCssGrid($grid-template-rows: 50% 50%, $grid-template-areas: \"questions questions\" \"diagram diagram\", $grid-row-gap: 15px);\r\n        @include dimension(80%, 60%);\r\n        @include margin(auto, auto, 25px, auto);\r\n    }\r\n}","@import './common.scss';\n\nhtml, body {\n    @include dimension(100%);\n    @include margin($all:0);\n    @include font($font-family: 'Segoe UI');   \n    @include color($bg-color:$color-light-grey);\n    @include dimension($height:100%);\n\n    #root {\n        @include dimension($height:100%);\n    }\n}"]}