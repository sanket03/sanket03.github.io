{"version":3,"sources":["scripts/components/Header.js","scripts/utilities/data.js","scripts/components/ArchitectureSolution.js","scripts/components/Questions.js","scripts/components/ArchitectureLayerBox.js","scripts/components/Diagram.js","scripts/components/Workspace.js","scripts/components/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","id","className","architectureDataObj","1","name","type","levels","isActive","options","111","parent_entities","112","2","113","114","3","115","116","117","118","119","4","121","5","122","123","questionsObj","question","choices","filterAzureIdentityMapping","solutionsList","ArchitectureSolution","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderSolutionlist","bind","assertThisInitialized","keys","map","item","value","key","htmlFor","ref","selectRef","onChange","selectArchitectureType","onClick","resetState","Component","Questions","_ref","activeQuestion","questionCount","level","obj","index","data-id","data-level","renderChoices","questionObj","_this2","split","choice","onOptionSelectHandler","checked","renderQuestions","ArchitectureLayerBox","entities","elementList","entity","element","push","_this$props","levelData","showLevel","levelId","renderEntities","Diagram","renderLayerBox","ArchitectureLayerBox_ArchitectureLayerBox","Workspace","state","activeLevel","setState","event","target","closest","getAttribute","questionId","nextElementSibling","innerHTML","entityMap","includedEntities","excludedEntities","console","log","parentLevel","parseInt","length","includes","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","setTimeout","alert","_this$props2","Questions_Questions","Diagram_Diagram","App","selectedSolutionId","selectedNode","React","createRef","current","option","Fragment","components_Header","ArchitectureSolution_ArchitectureSolution","Workspace_Workspace","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.252c00f4.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../../styles/Header.scss';\r\n\r\nconst Header = () =>  {\r\n    return (\r\n        <div id = 'header'>\r\n        <div className = 'custom-row'>\r\n            <h1>Azure solution architectures</h1>\r\n            <p>Architectures to help you design and implement secure, highly-available, performant and resilient solutions on Azure.</p>\r\n        </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","const architectureDataObj = {\r\n    '1' : {\r\n        'name':'Data Warehousing and Reporting',\r\n        'type':'some_type',\r\n        'levels': {\r\n                '1': {\r\n                    'name':'Data Sources',\r\n                    'isActive':false,\r\n                    'options': {\r\n                        '111': {\r\n                                'name':'Azure SQL DB',\r\n                                'isActive' : false,\r\n                                'parent_entities':[]\r\n                            },\r\n                        '112':\r\n                            {\r\n                                'name':'Stream Sources',\r\n                                'isActive' : false,\r\n                                'parent_entities':[]\r\n                            }\r\n                    }\r\n                },\r\n                '2': {\r\n                    'name':'Ingestion',\r\n                    'isActive':false,\r\n                    'options': {\r\n                        '111': {\r\n                                'name':'Azure SQL DB',\r\n                                'isActive' : false,\r\n                                'parent_entities':['111']\r\n                            },\r\n                        '113':\r\n                            {\r\n                                'name':'ADLS',\r\n                                'isActive' : false,\r\n                                'parent_entities':['111']\r\n                            },\r\n                        '114':\r\n                        {\r\n                            'name':'Event Hub',\r\n                            'isActive' : false,\r\n                            'parent_entities':['112']\r\n                        }\r\n                    }\r\n                },\r\n                '3': {\r\n                    'name':'Staging',\r\n                    'isActive':false,\r\n                    'options': {\r\n                        '111': {\r\n                                'name':'Azure SQL DB',\r\n                                'isActive' : false,\r\n                                'parent_entities':['111', '113']\r\n                            },\r\n                        '115':\r\n                            {\r\n                                'name':'ADW',\r\n                                'isActive' : false,\r\n                                'parent_entities':['111', '113']\r\n                            },\r\n                        '116':\r\n                        {\r\n                            'name':'AML',\r\n                            'isActive' : false,\r\n                            'parent_entities':['111','114','113']\r\n                        },\r\n                        '117':\r\n                        {\r\n                            'name':'Cognitive Services',\r\n                            'isActive' : false,\r\n                            'parent_entities':['111','114', '113']\r\n                        },\r\n                        '118':\r\n                        {\r\n                            'name':'HD Insights',\r\n                            'isActive' : false,\r\n                            'parent_entities':['111','114']\r\n                        },\r\n                        '119':\r\n                        {\r\n                            'name':'Stream Analytics',\r\n                            'isActive' : false,\r\n                            'parent_entities':['114']\r\n                        }\r\n                    }\r\n                },\r\n                '4':{\r\n                    'name':'Publishing',\r\n                    'isActive':false,\r\n                    'options': {\r\n                        '111': {\r\n                                'name':'Azure SQL DB',\r\n                                'isActive' : false,\r\n                                'parent_entities':['111','116','117']\r\n                            },\r\n                        '115':\r\n                            {\r\n                                'name':'ADW',\r\n                                'isActive' : false,\r\n                                'parent_entities':['115','116','117','118','119']\r\n                            },\r\n                        '116':\r\n                        {\r\n                            'name':'AML Web Services',\r\n                            'isActive' : false,\r\n                            'parent_entities':['115','116','117','118','119']\r\n                        },\r\n                        '121':\r\n                        {\r\n                            'name':'Cloud Services',\r\n                            'isActive' : false,\r\n                            'parent_entities':['115','116','117','118','119']\r\n                        }\r\n                    }\r\n                },\r\n                '5': {\r\n                    'name':'Consumption',\r\n                    'isActive':false,\r\n                    'options': {\r\n                        '122': {\r\n                                'name':'Power BI',\r\n                                'isActive' : false,\r\n                                'parent_entities':['116','111','115','121']\r\n                        },\r\n                        '123':{\r\n                                'name':'HTML Reports',\r\n                                'isActive' : false,\r\n                                'parent_entities':['116','111','115','121']\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n    }\r\n}\r\n\r\nconst questionsObj = {\r\n    '1': {\r\n        '1': [\r\n            {\r\n                'question' : 'Do you need Realtime Streaming or something similar to SQL DB will do?',\r\n                'choices' : 'Non Realtime|Realtime',\r\n                'id': '1'\r\n            }\r\n        ],\r\n        '2': [\r\n            {\r\n                'question' : 'Do you need a single store for file system and object data?',\r\n                'choices' : 'Yes|No',\r\n                'id':'2'\r\n            }\r\n        ],\r\n        '3': [\r\n            {\r\n                'question' : 'Do you need to embrace the power of Cognitive services?',\r\n                'choices' : 'Yes|No',\r\n                'id':'4'\r\n            }\r\n        ],\r\n        '4': [\r\n            {\r\n                'question' : 'Do you want to apply machine learning on your data?',\r\n                'choices' : 'Yes|No',\r\n                'id':'3'\r\n            }\r\n        ],\r\n        '5': [\r\n            {\r\n                'question' : 'Is there a need to consume data from multiple sources and report it without much development effort?',\r\n                'choices' : 'Yes|No',\r\n                'id':'5'\r\n            }\r\n        ]\r\n    }\r\n}\r\n\r\nconst filterAzureIdentityMapping = {\r\n    '1' : {\r\n        '111' : 'Non Realtime',\r\n        '112' : 'Realtime'\r\n    },\r\n    '2' : {\r\n        '113' : 'Yes'\r\n    },\r\n    '3' : {\r\n        '116' : 'Yes'\r\n    },\r\n    '4' : {\r\n        '117' : 'Yes'\r\n    },\r\n    '5' : {\r\n        '122' : 'Yes'\r\n    }\r\n}\r\n\r\n\r\nconst solutionsList = {\r\n    '1': 'Data Warehousing and Reporting'\r\n}\r\n\r\n\r\nexport {\r\n    solutionsList,\r\n    filterAzureIdentityMapping,\r\n    architectureDataObj,\r\n    questionsObj\r\n}","import React, { Component } from 'react';\r\n\r\nimport '../../styles/ArchitectureSolution.scss';\r\nimport {solutionsList} from '../utilities/data';\r\n\r\nexport default class ArchitectureSolution extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderSolutionlist = this.renderSolutionlist.bind(this);\r\n  }\r\n\r\n  renderSolutionlist(solutionsList) {\r\n    return Object.keys(solutionsList).map(item =>\r\n      <option \r\n        value = {item} \r\n        key = {item}>{solutionsList[item]}\r\n      </option>\r\n    )\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id = 'filters'>\r\n        <label htmlFor='architecture-solutions'><b>Solutions</b></label> <br/>\r\n        <select \r\n          id='architecture-solutions'\r\n          ref={this.props.selectRef}\r\n          onChange={this.props.selectArchitectureType}\r\n        >\r\n          {this.renderSolutionlist(solutionsList)}\r\n        </select>\r\n        <button onClick={this.props.resetState}>Reset</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Questions extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  renderQuestions({questionsObj, activeQuestion}) {\r\n    let questionCount = 0;\r\n    return Object.keys(questionsObj).map(level => \r\n      questionsObj[level].map((obj, index) => {\r\n        questionCount = questionCount + 1;\r\n        return (\r\n          <div \r\n            key = {index}\r\n            className = { activeQuestion +1 == questionCount ? 'question' : 'disable question'}\r\n            data-id = {obj['id']}\r\n            data-level = {level}\r\n          >\r\n          <span>{questionCount}.</span>\r\n          <span className = 'question-title'>\r\n            {obj['question']}\r\n          </span>\r\n          {this.renderChoices(obj, questionCount, activeQuestion)}\r\n          </div>\r\n        )\r\n      }\r\n    ))\r\n  }\r\n\r\n  renderChoices(questionObj, questionCount, activeQuestion) {\r\n    return questionObj['choices'].split('|').map((choice, index) => (\r\n      <div \r\n        className='option'\r\n        key = {questionObj.id + index}\r\n      >\r\n        {\r\n          activeQuestion === 0 ? \r\n                                (\r\n                                  <input \r\n                                    type = 'radio'\r\n                                    id = {questionObj.id + index}\r\n                                    name = {questionCount}\r\n                                    onChange = {this.props.onOptionSelectHandler}\r\n                                    checked = {false}\r\n                                />)\r\n                                :\r\n                                (\r\n                                  <input \r\n                                  type = 'radio'\r\n                                  id = {questionObj.id + index}\r\n                                  name = {questionCount}\r\n                                  onChange = {this.props.onOptionSelectHandler}         \r\n                                />\r\n                                )\r\n        }\r\n\r\n        <label \r\n          htmlFor={questionObj.id + index}\r\n          className='pointer'\r\n        >\r\n          {choice}\r\n        </label>\r\n      </div>\r\n    ))\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='questions-container'>\r\n        {this.renderQuestions(this.props)}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport '../../styles/ArchitectureLayerBox.scss';\r\n\r\nexport default class ArchitectureLayerBox extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  renderEntities(entities) {\r\n    let elementList = [];\r\n    for(let entity in entities) {\r\n        let element = (\r\n            <div \r\n                key = {entity}\r\n                className={entities[entity].isActive ? 'show' : 'hide'}\r\n            >\r\n                {entities[entity].name}\r\n            </div>\r\n        )\r\n        elementList.push(element);\r\n    }\r\n    return elementList;\r\n  }\r\n\r\n  render() {\r\n      let {\r\n          levelData,\r\n          showLevel,\r\n          levelId\r\n      } = this.props;\r\n    return (\r\n        <div className = {showLevel ? 'show outer-box': 'hide outer-box'}>\r\n            <div className = 'inner-box'>    \r\n                {this.renderEntities(levelData.options)}\r\n            </div>\r\n            <span className='layer-name'><b>{levelData.name}</b></span>\r\n            {levelId !== '5' ? <span className='arrow'>-----></span> : \"\"}\r\n        </div>\r\n    );\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport ArchitectureLayerBox from './ArchitectureLayerBox';\r\n\r\nexport default class Diagram extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.renderLayerBox = this.renderLayerBox.bind(this);\r\n  }\r\n\r\n  renderLayerBox({architectureDataObj}) {\r\n    let element = []\r\n    let levels = architectureDataObj.levels;\r\n    for(let level in levels) {\r\n      element.push(      \r\n        <ArchitectureLayerBox \r\n        key={level}\r\n        levelId = {level}\r\n        levelData={levels[level]}\r\n        showLevel={levels[level].isActive}\r\n        />\r\n      )\r\n    }\r\n    return element;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='diagram-container'>\r\n        <div id='diagram-wrapper'>\r\n          {this.renderLayerBox(this.props)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, {Component} from 'react';\r\nimport Questions from './Questions';\r\nimport Diagram from './Diagram';\r\n\r\nimport '../../styles/Workspace.scss';\r\n\r\nexport default class Workspace extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            activeQuestion: 0\r\n        }\r\n\r\n        this.activeLevel = '';\r\n        this.onOptionSelectHandler = this.onOptionSelectHandler.bind(this);\r\n        this.questionCount = 0;\r\n    }\r\n\r\n    componentWillReceiveProps(props) {\r\n        this.setState({\r\n            activeQuestion: props.activeQuestion\r\n        })\r\n    }\r\n\r\n    onOptionSelectHandler(event) {\r\n        let {\r\n            architectureDataObj,\r\n            filterAzureIdentityMapping\r\n        } = this.props;\r\n\r\n        // Get active level and question Id\r\n        this.activeLevel = event.target.closest('.question').getAttribute('data-level');\r\n        let questionId = event.target.closest('.question').getAttribute('data-id');\r\n        let choice = event.target.nextElementSibling.innerHTML;\r\n        let entityMap =  filterAzureIdentityMapping[questionId];\r\n        let includedEntities = [];\r\n        let excludedEntities = [];\r\n        console.log(event.target.checked);\r\n\r\n        // Get the entities affected by the current selected choice\r\n        for(let entity in entityMap) {\r\n            if(entityMap[entity] === choice) {\r\n                includedEntities.push(entity);\r\n            } else {\r\n                excludedEntities.push(entity);\r\n            }\r\n        }\r\n\r\n        // Set isActive of current level to true\r\n        for(let level in architectureDataObj[\"levels\"]) {\r\n            if(level===this.activeLevel) {\r\n                architectureDataObj[\"levels\"][level]['isActive'] = true;\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Set object for rendering diagram\r\n        let levels = architectureDataObj.levels;\r\n        \r\n        for(let level in levels) {\r\n          let entititesToBeRenderedForCurrentLevel = [];\r\n          let options = levels[level]['options'];\r\n          let parentLevel = parseInt(level) - 1;\r\n            if(level == this.activeLevel) {\r\n                // If no entity is effected by selected choice\r\n                if(includedEntities.length === 0) {\r\n                    // Check whether any of the entities are set to true during previous iteration\r\n                    for(let entity in options) {\r\n                        if(excludedEntities.includes(entity)) {\r\n                            options[entity].isActive = false;\r\n                            // activeEntitiesForLevel.delete(entity);\r\n                        } else {\r\n                            for(let item of options[entity].parent_entities) {\r\n                                if(levels[parentLevel].options[item].isActive) {\r\n                                    options[entity].isActive = true;\r\n                                    break;\r\n                                } else {\r\n                                    options[entity].isActive = false\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    // Set the filtered entities\r\n                    for(let entity in options) {\r\n                        if(includedEntities.includes(entity)) {\r\n                            options[entity].isActive = true;\r\n                        } else {\r\n                            options[entity].isActive = false;\r\n                        }\r\n                    }\r\n                }\r\n            } else if(level > this.activeLevel) {\r\n                for(let entity in options) {\r\n                    for(let item of options[entity].parent_entities) {\r\n                        if(levels[parentLevel].options[item].isActive) {\r\n                            options[entity].isActive = true;\r\n                            break;\r\n                        } else {\r\n                            options[entity].isActive = false\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        this.questionCount =  parseInt(event.target.name);\r\n\r\n        this.setState({\r\n          activeQuestion: this.questionCount\r\n        });\r\n        \r\n        setTimeout(()=>{\r\n            if(this.questionCount === 5) {\r\n                alert(\"Architecture is complete. Happy hunting\")\r\n                this.questionCount = 0;\r\n            }\r\n        }, 1000)\r\n\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            questionsObj,\r\n            architectureDataObj\r\n        } = this.props;\r\n        return (\r\n            <div id = 'workspace'>\r\n                <Questions \r\n                    questionsObj={questionsObj}\r\n                    activeQuestion={this.state.activeQuestion}\r\n                    onOptionSelectHandler={this.onOptionSelectHandler}/>\r\n                <Diagram \r\n                    architectureDataObj={architectureDataObj}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport ArchitectureSolution from './ArchitectureSolution';\r\nimport Workspace from './Workspace'\r\nimport {solutionsList, filterAzureIdentityMapping, architectureDataObj, questionsObj} from '../utilities/data';\r\n\r\nimport '../../styles/App.scss'\r\n\r\nexport default class App extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    // Setting State\r\n    this.state = {\r\n      selectedSolutionId: '1'\r\n    }\r\n\r\n    // Creating a Ref\r\n    this.selectedNode = React.createRef();\r\n\r\n    // Binding context to methods\r\n    this.selectArchitectureType = this.selectArchitectureType.bind(this);\r\n    this.resetState = this.resetState.bind(this);\r\n  }\r\n\r\n  selectArchitectureType() {\r\n    let selectedNode = this.selectedNode.current.value;\r\n    this.setState({\r\n      selectedSolutionId: selectedNode\r\n    });\r\n  }\r\n\r\n  resetState() {\r\n    let levels = architectureDataObj['1'].levels;\r\n    for(let level in architectureDataObj['1'].levels) {\r\n      levels[level].isActive = false;\r\n      for(let entity in levels[level].option) {\r\n        entity.isActive = false;\r\n      }\r\n    }\r\n    this.setState({\r\n      selectedSolutionId: 1\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Header />\r\n        <ArchitectureSolution \r\n          selectRef={this.selectedNode}\r\n          selectArchitectureType= {this.selectArchitectureType}\r\n          resetState = {this.resetState}\r\n        />\r\n        <Workspace \r\n          architectureDataObj={architectureDataObj[this.state.selectedSolutionId]} \r\n          filterAzureIdentityMapping={filterAzureIdentityMapping}\r\n          questionsObj={questionsObj[this.state.selectedSolutionId]}\r\n          activeQuestion={0}\r\n          />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './scripts/components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}